<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zx.rts.mapper.RtRecordRepairMapper">

    <select id="selectPageRtRecordRepair" resultType="com.zx.rts.dto.RtRecordRepairDto">
        SELECT * FROM (
            SELECT r.*,
            u.name AS target_User_Name ,
            u.phone_number AS target_User_Phone_Number ,
            u.village_code AS target_User_Village_Code ,
            u.town_code AS target_User_Town_Code
            FROM t_rt_record_repair r
            LEFT JOIN t_rt_user u
            ON r.target_user_id = u.id
            ) a  ${ew.customSqlSegment}

    </select>

    <select id="selectPageMergeRepairAndPump" resultType="com.zx.rts.dto.RtRecordRepairDto">

        SELECT * FROM (
            SELECT a.*,
            u.name AS target_User_Name ,
            u.phone_number AS target_User_Phone_Number ,
            u.village_code AS target_User_Village_Code ,
            u.town_code AS target_User_Town_Code
            FROM (
                SELECT * FROM t_rt_record_repair
                UNION ALL
                SELECT * FROM t_rt_record_pump
            ) AS a
            LEFT JOIN t_rt_user  AS u
            ON a.target_user_id = u.id
         )  t  ${ew.customSqlSegment}


    </select>
    <select id="selectPageRecordRepairCar" resultType="com.zx.rts.dto.RtRecordRepairDto">

        SELECT * FROM (
            SELECT a.*,
            u.name AS target_User_Name ,
            u.phone_number AS target_User_Phone_Number ,
            u.village_code AS target_User_Village_Code ,
            u.town_code AS target_User_Town_Code,
            c.car_no   AS   car_brand_number
            FROM (
                SELECT * FROM t_rt_record_repair
            ) AS a
            LEFT JOIN t_rt_user  AS u
            ON a.target_user_id = u.id
            LEFT JOIN t_rt_cars  AS  c
            ON  a.pump_car_id = c.id

         )  t  ${ew.customSqlSegment}


    </select>








    <update id="repairOvertimeTinspect">
        UPDATE t_rt_record_repair  SET overtime_flag = '1'
        WHERE id IN(
          SELECT  id  FROM (
              SELECT id  FROM t_rt_record_repair t
              WHERE
                 <![CDATA[  DATE_ADD(t.report_time, INTERVAL ${dayTime} DAY) < NOW()
                 AND t.repair_status != 2 AND overtime_flag !='1' ]]>
                 ) AS temp

                 )
    </update>

</mapper>
